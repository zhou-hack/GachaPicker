import"./index-c0d078cd.js";import{c as r}from"./api-cookie-d587b0da.js";const o=async t=>{const e=new TextEncoder().encode(t),s=await crypto.subtle.digest("SHA-256",e);return Array.from(new Uint8Array(s)).map(i=>i.toString(16).padStart(2,"0")).join("")},y=async()=>{const t=new Date().toISOString(),e=await fetch(`https://gist.githubusercontent.com/AguzzTN54/3816708e01827a5c64f4903242ede7b0/raw?date=${t}`),{hash:s,previousKey:a}=await e.json();return{baseKey:s,previousKey:a}},c=async t=>{const{baseKey:e,previousKey:s}=await y(),a=await o(t?.trim()),n=e===a,i=n?"none":s[a]||null;return{isKeyValid:n,expiryDate:i}},u={_set(t){const e=t.trim().split("").reverse().join("");r.set("accessKey",e)},clear(){return r.set("accessKey",null)},async initialLoad(){const t=r.get("accessKey"),e=t?.split("").reverse().join("");try{if(!t)return{validity:!1,storedKey:e,status:"ok"};const{isKeyValid:s,expiryDate:a}=await c(e);return{validity:s,expiryDate:a,storedKey:e,status:"ok"}}catch{return{validity:!1,storedKey:e,status:"offline"}}},async verify(t){try{const{isKeyValid:e,expiryDate:s}=await c(t);return e&&this._set(t),{validity:e,msg:e?"success":s&&s!=="none"?"menu.keyExpired1":"menu.invalidKey"}}catch{return{validity:!1,msg:"connectionFailed"}}}};export{u as a};
